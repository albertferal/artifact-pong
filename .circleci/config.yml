version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0


executors:
  pythonpygame:
    docker:
      - image: feralbert90/pokepong1:latest  # Dockerfile que se necesita de dockerhub

jobs:
  job-tests:
    executor: pythonpygame
    steps:
      - checkout  # Para obtener el cÃ³digo del repositorio
      - run:
          name: Run tests
          command: | 
                    pytest Game/tests
      - run:
          name: Run linting
          command: | 
                    pylint  --exit-zero Game
      - run:
          name: Run code coverage
          command: |
                    coverage run -m pytest Game
                    coverage report -m 
      - store_test_results:
          path: Game/tests/test-results.xml
      - sonarcloud/scan

  job-vulnerability:
    executor: pythonpygame
    steps:
      - checkout
      - run:
          name: Install Node.js and npm
          command: |
            apt-get update
            apt-get install -y nodejs npm
      - run:
          name: Install Snyk
          command: |
            npm install -g snyk
      - run:
         name: Analize with Snyc
         command: |
            export SNYK_TOKEN=$SNYK_TOKEN
            cd Game
            snyk_output=$(snyk code test)
            echo "$snyk_output"
            if echo "$snyk_output" | grep -q 'High severity vulnerabilities found'; then
              echo "Detected high severity vulnerabilities. Failing the build."
              exit 1
            else
              echo "No high severity vulnerabilities found."
            fi

  job-create-deploy-artifact:
    executor: pythonpygame
    steps:
      - checkout
      - run:
          name: Install zip
          command: |
            apt-get update && apt-get install -y zip
      - run:
          name: Create artifacts directory
          command: mkdir -p artifacts
      - run:
          name: Package artifact
          command: cd Game && zip -r ../artifacts/myapp.zip ./*
      - run:
          name: Install GitHub CLI
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            apt-get update
            apt-get install gh -y
      - run:
          name: Set Git Identity
          command: |
            git config user.email "albertferal@gmail.com"
            git config user.name "albertferal"
      - run:
          name: Obtener RELEASE_TAG
          command: |
            LAST_RELEASE=$(gh release list --repo albertferal/artifact-circleci --limit 1 | awk '{print $1}')
            OLD_VERSION=${LAST_RELEASE#"v"} 
            NEW_VERSION=$((OLD_VERSION + 1))
            export RELEASE_TAG="v$NEW_VERSION"
            echo "export RELEASE_TAG=$RELEASE_TAG" >> $BASH_ENV
      - run:
          name: Publish to GitHub Packages
          command: |
            FILE_PATH="artifacts/myapp.zip"
            TOKEN="$ART_TKN"
            REPOSITORY_OWNER="albertferal"
            REPOSITORY_NAME="artifact-try"
            PACKAGE_NAME="myapp.zip"

            gh release create $RELEASE_TAG $FILE_PATH --repo $REPOSITORY_OWNER/$REPOSITORY_NAME
#      - run:
#          name: Publish to GitHub
#          command: |
#            git remote set-url origin https://$GITHUB_TOKEN@github.com/albertferal/artifact-circleci.git
#            git add artifacts/myapp.zip
#            git commit -m "Agregar artefacto myapp.zip"
#            git push origin main

    
workflows:
  workflow-testing:
    jobs:
      - job-tests:
          context: SonarCloud
      - job-vulnerability:
          requires:
            - job-tests
      - job-create-deploy-artifact:
          context: ArtifactGH
          requires:
            - job-vulnerability
          filters:
            branches:
              only: main